name: Promote dev to main

on:
  push:
    branches:
      - dev

permissions:
  contents: read
  pull-requests: write

jobs:
  ensure-pr:
    name: Ensure dev -> main PR exists
    runs-on: ubuntu-latest
    steps:
      - name: Create or update PR
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const owner = context.repo.owner;
            const repo = context.repo.repo;

            const title = 'Promote dev to main';

            const { data: comparison } = await github.rest.repos.compareCommitsWithBasehead({
              owner,
              repo,
              basehead: 'main...dev',
            });

            const changeLines = comparison.commits
              .map((commit) => {
                const firstLine = commit.commit.message.split('\n')[0];
                const shortSha = commit.sha.slice(0, 7);
                return `- ${firstLine} (${shortSha})`;
              })
              .join('\n');

            const body = [
              '## Summary',
              '',
              'This automated PR promotes the latest changes from `dev` to `main` once validation passes.',
              '',
              '## Included changes',
              '',
              changeLines || '- No new commits to promote.',
              '',
              '## Deployment checklist',
              '',
              '- [ ] Release notes drafted',
              '- [ ] Production smoke tests complete',
            ].join('\n');

            const { data: existing } = await github.rest.pulls.list({
              owner,
              repo,
              state: 'open',
              head: `${owner}:dev`,
              base: 'main',
              per_page: 1,
            });

            if (existing.length > 0) {
              const prNumber = existing[0].number;
              await github.rest.pulls.update({
                owner,
                repo,
                pull_number: prNumber,
                title,
                body,
              });
              core.info(`Updated existing PR #${prNumber} with latest summary.`);
              return;
            }

            const { data: pr } = await github.rest.pulls.create({
              owner,
              repo,
              head: 'dev',
              base: 'main',
              title,
              body,
              maintainer_can_modify: true,
            });

            core.info(`Opened PR #${pr.number} to promote dev to main.`);
